// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Creative {
  id              String   @id               // Taboola item_id
  campaignId      String
  headline        String
  thumbnailUrl    String
  destinationUrl  String
  createdAt       DateTime @default(now())
  latestMetricsAt DateTime?
  
  // rolling aggregates for speed
  aggSpend        Float    @default(0)
  aggImpr         Int      @default(0)
  aggClicks       Int      @default(0)
  aggConv         Int      @default(0)
  aggCpa          Float?   // derived
  aggRoas         Float?   // derived
  
  featuresJson    String?  // JSON string of extracted text/image features
  status          String   @default("active") // active|paused|scaled|testing
  
  actions         Action[]
  metricSnapshots MetricSnapshot[]
  
  @@map("creatives")
}

model Action {
  id            String   @id @default(cuid())
  creativeId    String
  type          String   // "tested" | "scaled" | "paused"
  reasonShort   String   // short label for UI chips
  reasonDetail  String   // full explanation incl. metrics
  decidedBy     String   // "rule" | "human" | "model"
  decidedAt     DateTime @default(now())
  
  // snapshot of inputs used
  inputsJson    String?  // JSON string
  
  creative      Creative  @relation(fields: [creativeId], references: [id], onDelete: Cascade)
  
  @@map("actions")
}

model MetricSnapshot {
  id          String   @id @default(cuid())
  creativeId  String
  at          DateTime @default(now())
  spend       Float
  impr        Int
  clicks      Int
  ctr         Float
  cpc         Float
  conv        Int
  cpa         Float?
  roas        Float?
  siteTop3    String?  // compact string or JSON
  platformMix String?  // compact string or JSON
  
  creative    Creative @relation(fields: [creativeId], references: [id], onDelete: Cascade)
  
  @@map("metric_snapshots")
}

// Additional models for learning and configuration
model LearningConfig {
  id                String   @id @default(cuid())
  accountId         String   @unique
  targetCpa         Float    @default(25.0)
  targetRoas        Float    @default(1.3)
  minSpend          Float    @default(5.0)
  minConversions    Int      @default(1)
  pauseThresholdDays Int     @default(3)
  scaleThresholdDays Int     @default(2)
  updatedAt         DateTime @updatedAt
  
  @@map("learning_configs")
}

model SpecSnapshot {
  id              String   @id @default(cuid())
  fetchedAt       DateTime @default(now())
  version         String
  headlineMaxChars Int     @default(60)
  headlineWarnChars Int    @default(45)
  imageMinWidth   Int      @default(1200)
  imageMinHeight  Int      @default(674)
  imageMaxSize    Int      @default(5242880) // 5MB in bytes
  allowedFormats  String   @default("JPG,PNG") // comma-separated
  policiesJson    String?  // JSON string of policy rules
  
  @@map("spec_snapshots")
}